#
# Ubuntu: none
# Upstream: not yet
# Description: Make the tests suite independent from the source tree
#  by installing the resources into the Hammer directory.
#  Ideally, nothing should use base::DIR_SOURCE_ROOT at runtime.
#  We should introduce base::RESOURCE_DIR instead.
#  This is still a work in progress.
#
---
 webkit/tools/test_shell/SConscript        |   15 +++++++++++++++
 webkit/tools/test_shell/test_shell_gtk.cc |    4 ++--
 2 files changed, 17 insertions(+), 2 deletions(-)

Index: chromium-browser/webkit/tools/test_shell/SConscript
===================================================================
--- chromium-browser.orig/webkit/tools/test_shell/SConscript
+++ chromium-browser/webkit/tools/test_shell/SConscript
@@ -123,37 +123,52 @@
       'webwidget_host_gtk.cc',
       'test_shell_gtk.cc',
       'test_webview_delegate_gtk.cc',
   ])
 
 lib = env.ChromeStaticLibrary('test_shell', input_files)
 
 resources = []
+res = [
+  '$CHROME_SRC_DIR/webkit/tools/test_shell/resources/AHEM____.TTF',
+  '$CHROME_SRC_DIR/webkit/tools/test_shell/resources/missingImage.gif',
+  '$CHROME_SRC_DIR/webkit/tools/test_shell/resources/README.txt',
+]
 exe_input_files = [
   'test_shell_main.cc',
 ]
 
 if env['PLATFORM'] == 'win32':
   # TODO(port): figure out what to do with resources.
   resources = [
       env_res.RES('resources/test_shell.rc'),
       '$NET_DIR/net_resources.res',
       '$WEBKIT_DIR/build/localized_strings/webkit_strings_en-US.res',
   ]
 
   exe_input_files += [
       '$V8_DIR/snapshot-empty$OBJSUFFIX'
   ]
 
+if env['PLATFORM'] == 'posix':
+  res += [
+      '$CHROME_SRC_DIR/webkit/tools/test_shell/resources/linux-fontconfig-config',
+  ]
+
 test_shell = env.ChromeProgram('test_shell', resources + exe_input_files)
 
 i = env.Install('$TARGET_ROOT', test_shell)
 env.Alias('webkit', i)
 
+# Install resources files
+for file in res:
+  i = env.Install('$DESTINATION_ROOT/resources', file)
+  env.Depends(test_shell, i)
+
 if env['PLATFORM'] == 'win32':
   env.Depends(test_shell, '$V8_DIR/vc80.pdb')
 
 test_files = [
     'image_decoder_unittest.cc',
     'keyboard_unittest.cc',
     'layout_test_controller_unittest.cc',
     'node_leak_test.cc',
Index: chromium-browser/webkit/tools/test_shell/test_shell_gtk.cc
===================================================================
--- chromium-browser.orig/webkit/tools/test_shell/test_shell_gtk.cc
+++ chromium-browser/webkit/tools/test_shell/test_shell_gtk.cc
@@ -48,18 +48,18 @@
   // uses fontconfig to resolve font family names from WebKit into actual font
   // files found on the current system. This means that fonts vary based on the
   // system and also on the fontconfig configuration.
   //
   // To avoid this we initialise fontconfig here and install a configuration
   // which only knows about a few, select, fonts.
 
   FilePath resources_path;
-  PathService::Get(base::DIR_SOURCE_ROOT, &resources_path);
-  resources_path = resources_path.Append("webkit/tools/test_shell/resources/");
+  PathService::Get(base::FILE_MODULE, &resources_path);
+  resources_path = resources_path.DirName().Append("resources/");
 
   // We have fontconfig parse a config file from our resources directory. This
   // sets a number of aliases ("sans"->"Arial" etc), but doesn't include any
   // font directories.
 
   FcInit();
 
   FcConfig* fontcfg = FcConfigCreate();
