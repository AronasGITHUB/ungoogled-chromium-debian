#
# Ubuntu: none
# Upstream: http://codereview.chromium.org/271
# Description: Allow system libs via a new SYSTEM_LIBS scons variable
#
---
 build/SConscript.main                   |   76 ++++++++++++++++++++++++++------
 chrome/tools/test/image_diff/SConscript |    2 
 third_party/bzip2/using_bzip2.scons     |    2 
 third_party/libxml/using_libxml.scons   |    4 -
 webkit/tools/test_shell/SConscript      |    4 -
 5 files changed, 69 insertions(+), 19 deletions(-)

Index: chrome/build/SConscript.main
===================================================================
--- chrome.orig/build/SConscript.main
+++ chrome/build/SConscript.main
@@ -20,16 +20,27 @@
 
 
 load = ARGUMENTS.get('LOAD')
 if load:
     load = load.split(',')
 else:
     load = []
 
+system_libs = ARGUMENTS.get('SYSTEM_LIBS')
+if system_libs:
+    system_libs = system_libs.split(',')
+else:
+    system_libs = []
+all_system_libs = []
+
+def WantSystemLib(l):
+    if l not in all_system_libs:
+        all_system_libs.append(l)
+    return (l in system_libs)
 
 root_env = Environment(
     tools = ['component_setup'],
 
     CHROME_SRC_DIR = '$MAIN_DIR/..',
     DESTINATION_ROOT = '$MAIN_DIR/Hammer',
     TARGET_ROOT = '$DESTINATION_ROOT',
 
@@ -203,27 +214,43 @@
 
 if LoadComponent('skia'):
   sconscripts.append('$SKIA_DIR/SConscript')
 
 if LoadComponent('testing'):
   sconscripts.append('$TESTING_DIR/SConscript.gtest')
 
 if LoadComponent('third_party'):
+  if not WantSystemLib('bzip2'):
+    sconscripts.append('$BZIP2_DIR/bzip2.scons')
+    root_env.Append(BZIP2_LIB = ['bzip2'])
+  else:
+    root_env.Append(BZIP2_LIB = ['bz2'])
+  if not WantSystemLib('libpng'):
+    sconscripts.append('$LIBPNG_DIR/libpng.scons')
+  if not WantSystemLib('libjpeg'):
+    sconscripts.append('$LIBJPEG_DIR/SConscript')
+  if not WantSystemLib('libxml'):
+    sconscripts.append('$LIBXML_DIR/SConscript')
+    root_env.Append(XML_LIB = ['libxml'])
+  else:
+    root_env.Append(XML_LIB = ['xml2'])
+  if not WantSystemLib('libxslt'):
+    sconscripts.append('$LIBXSLT_DIR/SConscript')
+  if not WantSystemLib('lzma_sdk'):
+    sconscripts.append('$LZMA_SDK_DIR/SConscript')
+  if not WantSystemLib('zlib'):
+    sconscripts.append('$ZLIB_DIR/zlib.scons')
+    root_env.Append(ZLIB_LIB = ['zlib'])
+  else:
+    root_env.Append(ZLIB_LIB = ['z'])
   sconscripts.extend([
       '$BSDIFF_DIR/SConscript',
-      '$BZIP2_DIR/bzip2.scons',
       '$ICU38_DIR/icu38.scons',
-      '$LIBPNG_DIR/libpng.scons',
-      '$LZMA_SDK_DIR/SConscript',
       '$MODP_B64_DIR/modp_b64.scons',
-      '$ZLIB_DIR/zlib.scons',
-      '$LIBJPEG_DIR/SConscript',
-      '$LIBXML_DIR/SConscript',
-      '$LIBXSLT_DIR/SConscript',
       '$BSPATCH_DIR/SConscript',
   ])
 
 if LoadComponent('v8') and root_env.Dir('$CHROME_SRC_DIR/v8').exists():
   sconscripts.append('$OBJ_ROOT/build/SConscript.v8')
 
 if LoadComponent('webkit'):
   sconscripts.append('$WEBKIT_DIR/SConscript')
@@ -435,20 +462,23 @@
     linux_env['ENV'][envvar] = os.environ[envvar]
 
 excluded_warnings = [
   # TODO: Clean up uses of ext/hash_map and remove this.
   # (see unordered_map and base/hash_tables.h)
   '-Wno-deprecated',  # Needed for using ext/hash_map on GCC 4.3
   '-Wno-unknown-pragmas',  # In wtf's ref counting system
 ]
+if not WantSystemLib('libevent'):
+  linux_env.Append(
+        BUILD_SCONSCRIPTS = [
+            '$LIBEVENT_DIR/libevent.scons',
+        ],
+  )
 linux_env.Append(
-    BUILD_SCONSCRIPTS = [
-        '$LIBEVENT_DIR/libevent.scons',
-    ],
     CCFLAGS = ['-m32', '-g', '-pthread'],
     CXXFLAGS = ['-Wall', '-Werror'] + excluded_warnings,
     LINKFLAGS = ['-m32', '-pthread'],
 )
 
 linux_env.Replace(
     # We have several cases where archives depend on each other in a cyclic
     # fashion. (V8Bindings, libport and WebCore being the most significant
@@ -508,17 +538,30 @@
   except OSError, e:
     print ('\n'
         'Failed to find a package dependency.  Please install all the\n'
         'packages listed at\n'
         'http://code.google.com/p/chromium/wiki/LinuxBuildInstructions'
         '#Software_Requirements')
 
     sys.exit(1)
-
+  if WantSystemLib('libxml'):
+    try:
+      linux_env.ParseConfig('pkg-config --cflags --libs libxml-2.0')
+    except OSError, e:
+      print ('\n'
+          'libxml requested in SYSTEM_LIBS but not found\n')
+      sys.exit(1)
+  if WantSystemLib('libxslt'):
+    try:
+      linux_env.ParseConfig('pkg-config --cflags --libs libxslt')
+    except OSError, e:
+      print ('\n'
+          'libxslt requested in SYSTEM_LIBS but not found\n')
+      sys.exit(1)
 
 # --------------------------------------------------------------------------
 # Mac specific
 
 mac_env = root_env.Clone()
 environment_list.append(mac_env)
 mac_env.Tool('target_platform_mac')
 mac_env.Tool('target_debug')
@@ -549,20 +592,23 @@
         '$GOOGLE_UPDATE_DIR/SConscript',
         '$RLZ_DIR/SConscript',
         '$SANDBOX_DIR/sandbox.scons',
         'build/SConscript.v8',
         '$WEBKIT_DIR/SConscript',
     ],
 )
 
-mac_env.Append(
+if not WantSystemLib('libevent'):
+  mac_env.Append(
     BUILD_SCONSCRIPTS = [
         '$LIBEVENT_DIR/libevent.scons',
     ],
+  )
+mac_env.Append(
     CFLAGS = [
         '-std=c99',
     ],
     CXXFLAGS = [
         '-fvisibility-inlines-hidden',
         '${str(SOURCE).endswith(".mm") and "-fobjc-gc" or ""}',
     ],
     CCFLAGS = [
@@ -629,32 +675,36 @@
 
 help_fmt = """
 Usage: hammer [SCONS_OPTIONS] [VARIABLES] [TARGET] ...
 
 Supported build variables:
   LOAD=[module,...]         Comma-separated list of components to load in the
                               dependency graph ('-' prefix excludes):
 %s
+  SYSTEM_LIBS=[lib,...]     Comma-separated list of system libraries that must
+                              be used from the system (not be built here):
+%s
   PROGRESS=type             Display a progress indicator:
                               name:  print each evaluated target name
                               spinner:  print a spinner every 5 targets
   VERBOSE=1                 Display full command lines
 """
 
 if GetOption('help'):
   import textwrap
   tw = textwrap.TextWrapper(
     width = 78,
     initial_indent = ' '*32,
     subsequent_indent = ' '*32,
   )
   components = tw.fill(', '.join(components))
+  all_system_libs = tw.fill(', '.join(all_system_libs))
 
-  Help(help_fmt % components)
+  Help(help_fmt % (components, all_system_libs))
 
 
 Import('build_component')
 Default(None)  # Reset default target to empty.
 Default(Alias(build_component))  # Set default target based on where built.
 
 # -------------------------------------------------------------------------
 
Index: chrome/chrome/tools/test/image_diff/SConscript
===================================================================
--- chrome.orig/chrome/tools/test/image_diff/SConscript
+++ chrome/chrome/tools/test/image_diff/SConscript
@@ -17,17 +17,17 @@
         '$LIBPNG_DIR',
         '$CHROME_SRC_DIR',
     ],
     LIBS = [
         'skia',
         'libpng',
         'base_gfx',
         env_test['ICU_LIBS'],  # TODO(sgk):  '$ICU_LIBS' when scons is fixed
-        'zlib',
+        env_test['ZLIB_LIB'],
         'base',
     ],
 )
 
 if env_test['PLATFORM'] == 'win32':
     env_test.Prepend(
         LINKFLAGS = [
             '/INCREMENTAL',
Index: chrome/webkit/tools/test_shell/SConscript
===================================================================
--- chrome.orig/webkit/tools/test_shell/SConscript
+++ chrome/webkit/tools/test_shell/SConscript
@@ -32,24 +32,24 @@
         'base',
         'base_gfx',
         'breakpad_handler',
         'googleurl',
         'net',
         'sdch',
         'skia',
         'gtest',
-        'bzip2',
+        env['BZIP2_LIB'],
         'V8Bindings',
         'WebCore',
         'WTF',
         env['ICU_LIBS'],  # TODO(sgk):  '$ICU_LIBS' when scons is fixed
         'libjpeg',
         'libpng',
-        'libxml',
+        env['XML_LIB'],
         'libxslt',
         'modp_b64',
         'zlib',
         'sqlite',
         'v8',
         'JavaScriptCore_pcre',
         'default_plugin',
     ],
Index: chrome/third_party/bzip2/using_bzip2.scons
===================================================================
--- chrome.orig/third_party/bzip2/using_bzip2.scons
+++ chrome/third_party/bzip2/using_bzip2.scons
@@ -5,11 +5,11 @@
 __doc__ = """
 Settings for other components using the bzip2 library.
 """
 
 Import("env")
 
 env.Append(
     LIBS = [
-        'bzip2',
+        env['BZIP2_LIB'],
     ],
 )
Index: chrome/third_party/libxml/using_libxml.scons
===================================================================
--- chrome.orig/third_party/libxml/using_libxml.scons
+++ chrome/third_party/libxml/using_libxml.scons
@@ -12,17 +12,17 @@
     CPPPATH = [
         '$LIBXML_DIR/include',
         '$LIBXML_DIR/DerivedSources/include',
     ],
     CPPDEFINES = [
         'LIBXML_STATIC',
     ],
     LIBS = [
-        'libxml',
+        env['XML_LIB'],
     ],
 )
 # Copyright (c) 2006-2008 The Chromium Authors. All rights reserved.
 # Use of this source code is governed by a BSD-style license that can be
 # found in the LICENSE file.
 
 __doc__ = """
 Settings for other components using the libxml library.
@@ -34,11 +34,11 @@
     CPPPATH = [
         '$LIBXML_DIR/include',
         '$LIBXML_DIR/DerivedSources/include',
     ],
     CPPDEFINES = [
         'LIBXML_STATIC',
     ],
     LIBS = [
-        'libxml',
+        env['XML_LIB'],
     ],
 )
