#!/usr/bin/make -f

# These are used for cross-compiling and for saving the configure script
# from having to guess our platform (since we know it already)
DEB_HOST_GNU_TYPE       ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE      ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)
DEB_BUILD_ARCH          ?= $(shell dpkg-architecture -qDEB_BUILD_ARCH)

DEBIAN_NAME		:= $(shell dpkg-parsechangelog | sed -n 's/^Source: *\(.*\)$$/\1/ p')
DEBIAN_VERSION		:= $(shell dpkg-parsechangelog | sed -n 's/^Version: *\(.*\)$$/\1/ p')
DEBIAN_UPSTREAM_VERSION	:= $(shell echo $(DEBIAN_VERSION) | sed 's/^\(.*\)-[^-]*$$/\1/')
DEBIAN_REVISION		:= $(shell echo $(DEBIAN_VERSION) | sed 's/^.*r\([^-]*\).*/\1/')

DEB_TAR_SRCDIR := $(DEBIAN_NAME)
SRC_DIR        := $(CURDIR)/build-tree/$(DEBIAN_NAME)
DEB_BUILDDIR   := $(SRC_DIR)/chrome
DEB_SCONS_ARGS := --site-dir=../site_scons

DEBIAN_TESTSUITE := $(DEBIAN_NAME:browser=testsuite)

WANT_DEBUG       := 0
WANT_SYSTEM_LIBS := 0
USE_SYSTEM_SCONS := 1

ifeq (1,$(WANT_DEBUG))
DEB_SCONS_ARGS += --mode=dbg
else
DEB_SCONS_ARGS += --mode=opt
endif

# Verbose?
DEB_SCONS_ARGS += VERBOSE=0

# scons 0.97 (hardy) fails, switch to in-source scons if system scons < 0.98
SCONS_VERSION := $(shell grep ^__version__ /usr/bin/scons | cut -d\" -f2)
ifneq (,$(SCONS_VERSION))
USE_SYSTEM_SCONS := $(shell dpkg --compare-versions $(SCONS_VERSION) lt 0.98; echo $$?)
else
USE_SYSTEM_SCONS := 0
endif
ifeq (0,$(USE_SYSTEM_SCONS))
SCONS := ../third_party/scons/scons.py
endif

include /usr/share/cdbs/1/rules/tarball.mk
include /usr/share/cdbs/1/rules/patchsys-quilt.mk
include /usr/share/cdbs/1/rules/debhelper.mk
include $(CURDIR)/debian/cdbs/scons.mk

$(info SCONS=$(SCONS))

INSTALL_EXCLUDES = \
	lib \
	obj \
	opt \
	dbg \
	.sconsign_linux2.dblite \
	$(NULL)

TESTS = \
	base_unittests \
	googleurl_unittests \
	media_unittests \
	net_perftests \
	-net_unittests:"Infinite loop in TelnetServerTest.ServerClientSend" \
	-test_shell:"Needs a DISPLAY" \
	-test_shell_tests:"Needs a DISPLAY" \
	unit_tests \
	$(NULL)

# System libs
# - libpng: problem with undefined references to lots of webkit_png_* symbols
# - zlib: symbols are remapped to MOZ_Z_xx for libpng
# - libevent: 2 missing symbols. Too old?
# - sqlite: unit_tests crash in browser/history/text_database.cc
ifeq (1,$(WANT_SYSTEM_LIBS))
SYSTEM_LIBS     = bzip2,libjpeg,libxml,libxslt,lzma_sdk,hunspell
DEB_SCONS_ARGS += SYSTEM_LIBS=$(SYSTEM_LIBS)
endif

# For now, build all test programs
DEB_SCONS_ARGS += all_test_programs

$(info # Building with DEB_SCONS_ARGS=$(DEB_SCONS_ARGS))

# Install: there's no install rules in scons yet, do it manually
binary-install/$(DEBIAN_TESTSUITE)::
	mkdir -p debian/$(DEBIAN_TESTSUITE)/usr/lib/$(DEBIAN_NAME)
	( cd $(SRC_DIR)/chrome/Hammer ; tar $(foreach excl,$(INSTALL_EXCLUDES),--exclude=$(excl)) -cf - . ) | \
	( cd debian/$(DEBIAN_TESTSUITE)/usr/lib/$(DEBIAN_NAME) ; tar xvf - )

# Tests
binary-post-install/$(DEBIAN_TESTSUITE)::
	mkdir -p debian/$(DEBIAN_TESTSUITE)/usr/lib/$(DEBIAN_NAME)/test-results
	cd $(SRC_DIR)/chrome/Hammer ; \
	for test in $(TESTS) ; do \
		tname=`echo "$$test" | sed -e 's/^-\([^:]*\):.*/\1/'` ; \
		echo "==========================================================================" ; \
		echo -n "# Running '$$tname' " ; \
		echo "(last 100 lines only, visit /usr/lib/$(DEBIAN_NAME)/test-results/$$tname.txt for more)" ; \
		if [ Z"`echo $$test | sed -e 's/^-.*//'`" = Z ] ; then \
			echo "Skipped, reason: "`echo $$test | sed -e 's/^[^:]*://'` ; \
			continue ; \
		fi ; \
		./$$test > $(CURDIR)/debian/$(DEBIAN_TESTSUITE)/usr/lib/$(DEBIAN_NAME)/test-results/$$test.txt 2>&1 || true ; \
		tail -100  $(CURDIR)/debian/$(DEBIAN_TESTSUITE)/usr/lib/$(DEBIAN_NAME)/test-results/$$test.txt ; \
		echo "==========================================================================" ; \
		echo ; \
	done

###############################################################################################

# Tarball (get-orig-source & get-current-source)
GCLIENT_URL  := http://src.chromium.org/svn/trunk/depot_tools/linux
CHROMIUM_URL := http://src.chromium.org/svn/trunk/src
USE_GCLIENT  := 0
TMP_DDIR     := $(DEBIAN_NAME)-$(shell echo $$$$)
ifeq (,$(LOCAL_BRANCH))
TMP_DIR      := $(TMP_DDIR)
else
TMP_DIR      := $(LOCAL_BRANCH)
endif

ifneq (,$(DEBIAN_TAG))
get-orig-source: TAG  = $(NULL)
else
get-orig-source: TAG  = -r $(shell svn log --limit 1 $(CHROMIUM_URL) | grep ^r | head -1 | sed -e 's/^r\([^ ]*\).*/\1/')
endif
get-orig-source: gos-all

get-current-source: TAG = -r $(DEBIAN_REVISION)
get-current-source: gos-all

gos-all: gos-co gos-pack
gos-co:
ifeq (,$(LOCAL_BRANCH))
	rm -rf $(TMP_DIR)
endif
	@if [ ! -d $(TMP_DIR) ] ; then echo mkdir $(TMP_DIR); mkdir $(TMP_DIR) ; fi
	# Checkout
ifeq (1,$(USE_GCLIENT))
ifneq (,$(TAG))
	$(error glclient doesn't support tags)
endif
	svn co $(GCLIENT_URL) $(TMP_DIR)/depot_tools
	cd $(TMP_DIR) && ./depot_tools/gclient config $(CHROMIUM_URL)
	cd $(TMP_DIR) && ./depot_tools/gclient sync
else
	svn co $(TAG) $(CHROMIUM_URL) $(TMP_DIR)/src
	@for dep in `perl -pe 's,^([a-z]),\\$$$$1,; s,([\]}])$$,$$1;,; s,:$$, => ,; s,:\s*({|"), => $$1,; s, \+ , . ,g; s/Var\("(.*?)"\)/\\$$vars->{"$$1"}/g;' $(TMP_DIR)/src/DEPS | \
	  perl -e 'local $$/ = undef; $$s = <>; eval $$s; for my $$k (keys %$$deps) { print "$$k\"$$$$deps{$$k}\n" }'` ; do \
	 echo svn co `echo $$dep | cut -d\" -f2 | sed -e 's,^/,$(CHROMIUM_URL:trunk/src=),'` $(TMP_DIR)/`echo $$dep | cut -d\" -f1`  ; \
	 svn co `echo $$dep | cut -d\" -f2 | sed -e 's,^/,$(CHROMIUM_URL:trunk/src=),'` $(TMP_DIR)/`echo $$dep | cut -d\" -f1` ; \
	done
endif
ifneq (,$(LOCAL_BRANCH))
	rm -rf $(TMP_DDIR)
	cp -a $(TMP_DIR) $(TMP_DDIR)
endif
	# Remove binaries
	cd $(TMP_DDIR)/src && find . -type f \( -iname \*.exe -o -iname \*.dll -o -iname \*.pdb \) -exec rm -fv {} \; > REMOVED-bin_only.txt
	
gos-pack: TMP_DIR  = $(TMP_DDIR)
ifneq (,$(DEBIAN_TAG))
gos-pack: VERSION  = $(shell echo $(DEBIAN_TAG) | cut -d= -f2)
else
gos-pack: REVISION = $(shell cd $(TMP_DIR)/src && svn log --xml --limit 1 | grep -E '^( *revision=|<date>)' | tr -d '\n' | \
	             sed -e 's/.*"\([0-9]*\)".*>\(....\)-\(..\)-\(..\)T.*/\2\3\4r\1/')
gos-pack: VERSION  = $(shell cut -d= -f2 $(TMP_DIR)/src/chrome/VERSION | sed -e 's,$$,.,' | tr -d '\n' | sed -e 's/.$$//')~svn$(REVISION)
endif
gos-pack:
	# Pack
	mv $(TMP_DIR)/src $(TMP_DIR)/$(DEBIAN_NAME)
	cd $(TMP_DIR) && tar jcf $(DEBIAN_NAME)-$(VERSION)-source.tar.bz2 --exclude=.svn $(DEBIAN_NAME)
	mkdir $(TMP_DIR)/$(DEBIAN_NAME)-$(VERSION)
	mv $(TMP_DIR)/$(DEBIAN_NAME)-$(VERSION)-source.tar.bz2 $(TMP_DIR)/$(DEBIAN_NAME)-$(VERSION)
	cd $(TMP_DIR) && tar zcf ../$(DEBIAN_NAME)_$(VERSION).orig.tar.gz $(DEBIAN_NAME)-$(VERSION)
	rm -rf $(TMP_DIR)
	@echo "# Done (created $(DEBIAN_NAME)_$(VERSION).orig.tar.gz)"
	@ls -l $(DEBIAN_NAME)_$(VERSION).orig.tar.gz
