Do not use armv4 incopatible code
Index: chromium/src/third_party/skia/include/core/SkMath.h
===================================================================
--- chromium.orig/src/third_party/skia/include/core/SkMath.h	2012-02-10 23:36:46.000000000 -0500
+++ chromium/src/third_party/skia/include/core/SkMath.h	2012-02-10 23:37:08.000000000 -0500
@@ -156,7 +156,7 @@
 #if defined(__arm__) \
   && !defined(__thumb__) \
   && !defined(__ARM_ARCH_4T__) \
-  && !defined(__ARM_ARCH_5T__)
+  && 0
     static inline int32_t SkMulS16(S16CPU x, S16CPU y) {
         SkASSERT((int16_t)x == x);
         SkASSERT((int16_t)y == y);
Index: chromium/src/build/common.gypi
===================================================================
--- chromium.orig/src/build/common.gypi	2012-02-10 23:36:46.000000000 -0500
+++ chromium/src/build/common.gypi	2012-02-10 23:37:08.000000000 -0500
@@ -1806,6 +1806,7 @@
                   # silences those warnings, as they are not helpful and
                   # clutter legitimate warnings.
                   '-Wno-abi',
+                  '-fno-tree-sink',
                 ],
                 'conditions': [
                   ['arm_thumb==1', {
Index: chromium/src/base/debug/debugger_posix.cc
===================================================================
--- chromium.orig/src/base/debug/debugger_posix.cc	2012-02-10 23:36:46.000000000 -0500
+++ chromium/src/base/debug/debugger_posix.cc	2012-02-10 23:37:08.000000000 -0500
@@ -202,7 +202,7 @@
 } while (0)
 #else
 // ARM && !ANDROID
-#define DEBUG_BREAK() asm("bkpt 0")
+#define DEBUG_BREAK() asm("nop")
 #endif
 #else
 #define DEBUG_BREAK() asm("int3")
Index: chromium/src/third_party/skia/src/opts/SkBlitRow_opts_arm.cpp
===================================================================
--- chromium.orig/src/third_party/skia/src/opts/SkBlitRow_opts_arm.cpp	2012-02-10 23:36:46.000000000 -0500
+++ chromium/src/third_party/skia/src/opts/SkBlitRow_opts_arm.cpp	2012-02-10 23:37:08.000000000 -0500
@@ -671,8 +671,8 @@
                   /* dst1_scale and dst2_scale*/
                   "lsr    r9, r5, #24                \n\t" /* src >> 24 */
                   "lsr    r10, r6, #24               \n\t" /* src >> 24 */
-                  "smulbb r9, r9, %[alpha]           \n\t" /* r9 = SkMulS16 r9 with src_scale */
-                  "smulbb r10, r10, %[alpha]         \n\t" /* r10 = SkMulS16 r10 with src_scale */
+                  "mul    r9, r9, %[alpha]           \n\t" /* r9 = SkMulS16 r9 with src_scale */
+                  "mul    r10, r10, %[alpha]         \n\t" /* r10 = SkMulS16 r10 with src_scale */
                   "lsr    r9, r9, #8                 \n\t" /* r9 >> 8 */
                   "lsr    r10, r10, #8               \n\t" /* r10 >> 8 */
                   "rsb    r9, r9, #256               \n\t" /* dst1_scale = r9 = 255 - r9 + 1 */
@@ -741,7 +741,7 @@
 
                   "lsr    r6, r5, #24                \n\t" /* src >> 24 */
                   "and    r8, r12, r5, lsr #8        \n\t" /* ag = r8 = r5 masked by r12 lsr by #8 */
-                  "smulbb r6, r6, %[alpha]           \n\t" /* r6 = SkMulS16 with src_scale */
+                  "mul    r6, r6, %[alpha]           \n\t" /* r6 = SkMulS16 with src_scale */
                   "and    r9, r12, r5                \n\t" /* rb = r9 = r5 masked by r12 */
                   "lsr    r6, r6, #8                 \n\t" /* r6 >> 8 */
                   "mul    r8, r8, %[alpha]           \n\t" /* ag = r8 times scale */
